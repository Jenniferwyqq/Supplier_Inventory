-- Name: Brand
-- Purpose: Describe attributes of a brand, includes name, phone, manager name, email, and address.
create table brand(
   id INT NOT NULL AUTO_INCREMENT,
   name VARCHAR(50) NOT NULL,
   phone VARCHAR(15),
   contact_name VARCHAR(20),
   email VARCHAR(50),
   address VARCHAR(50),
   zip VARCHAR(10),
   PRIMARY KEY ( id )
);

-- Name: employee
-- Purpose: Describe attributes of a employee. Includes employee name, phone, birth, email, address, zip.
create table employ(
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(50),
    phone VARCHAR(15),
    birth VARCHAR(20),
    email VARCHAR(50),
    address VARCHAR(50),
    zip INT,
    user_name VARCHAR(15),
    user_pass VARCHAR(15),
    PRIMARY KEY ( id )
);

-- Name: Box
-- Purpose: Describe attributes of a Box, includes box name and brand.
create table box(
   id INT NOT NULL AUTO_INCREMENT,
   name VARCHAR(10) NOT NULL,
   brand_id INT,
   PRIMARY KEY ( id ),
   FOREIGN KEY (brand_id) REFERENCES brand(id)
);

create table box_content(
   box_id INT,
   size FLOAT(3,1),
   quantity INT,
   PRIMARY KEY ( box_id, size ),
   FOREIGN KEY (box_id) REFERENCES box(id)
);

-- Name: Shoe
-- Purpose: Describe attributes of a shoe, includes the name, color, and material of the shoe.
create table shoe(
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    color VARCHAR(50) NOT NULL,
    material VARCHAR(50) NOT NULL,
    brand_id INT,
    PRIMARY KEY ( id ),
    FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: Shoe dimension
-- Purpose: Describe attributes of a shoe dimension, includes length, width, height, and weight of a size of a shoe
create table shoe_dimension(
    shoe_id INT,
    size FLOAT(3,1),
    length FLOAT(4,2),
    width FLOAT(4,2),
    height FLOAT(4,2),
     weight FLOAT(4,2),
	PRIMARY KEY (shoe_id, size),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id)
);

-- Name: box dimension
-- Purpose: Describe attributes of a box dimension, includes length, width, height, and weight of a particular shoe of the box
create table box_dimension(
	box_id INT,  
    shoe_id INT,  
    length FLOAT(4,2),
	width FLOAT(4,2),
	height FLOAT(4,2),
	weight FLOAT(4,2),
	PRIMARY KEY ( box_id, shoe_id ),
	FOREIGN KEY (box_id) REFERENCES box(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id)
);

-- Name: Purchase date
-- Purpose: Describe attributes of a purchase date. Includes which brand deliver goods.
create table purchase_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
   	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: Purchase 
-- Purpose: Describe attributes of a purchase detail, includes box, shoe, quantity, and unit price of the shoe. And which employee records.
create table purchase(
	purchase_id INT,
	box_id INT,
    shoe_id INT,
	quantity INT,
	unit_price FLOAT(5,2), 
	employ_id INT,
	PRIMARY KEY ( purchase_id, box_id, shoe_id ),
	FOREIGN KEY (purchase_id) REFERENCES purchase_date(id),
	FOREIGN KEY (box_id) REFERENCES box(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: Sell date //本來有brand但我想到beand在出貨的時候不重要
-- Purpose: Describe attributes of a Sell date. 
create table sell_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: Sell 
-- Purpose: Describe attributes of a sell detail, includes box, shoe, and quantity. And which employee records.
create table sell(
	sell_id INT,
	box_id INT,
    	shoe_id INT,
	quantity INT,
	employ_id INT,
	PRIMARY KEY ( sell_id, box_id, shoe_id ),
	FOREIGN KEY (sell_id) REFERENCES sell_date(id),
	FOREIGN KEY (box_id) REFERENCES box(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: revise date
-- Purpose: Describe attributes of a revise date. Includes which brand deliver goods.
create table inventory_revise_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
   	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: Purchase 
-- Purpose: Describe attributes of a purchase detail, includes box, shoe, quantity, and unit price of the shoe. And which employee records.
create table inventory_revise(
	revise_id INT,
	box_id INT,
  	shoe_id INT,
	employ_id INT,
	PRIMARY KEY ( revise_id, box_id, shoe_id ),
	FOREIGN KEY (revise_id) REFERENCES inventory_revise_date(id),
	FOREIGN KEY (box_id) REFERENCES box(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: rma_back_date
-- Purpose: Describe attributes of a rma, include date.
create table rma_back_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: rma_sell_date
-- Purpose: Describe attributes of a rma, include date.
create table rma_sell_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: rma_back
-- Purpose: Describe attributes of a rma back to warehouse, include shoe, size, quantity. And which employee records.
create table rma_back(
	rma_id INT,
   	shoe_id INT,
	size FLOAT(3,1),
	quantity INT,
	employ_id INT,
	PRIMARY KEY (rma_id, shoe_id, size ),
	FOREIGN KEY (rma_id) REFERENCES rma_back_date(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: rma_sell
-- Purpose: Describe attributes of a rma sold, include shoe, size, quantity. And which employee records.
create table rma_sell(
	rma_id INT,
    	shoe_id INT,
	size FLOAT(3,1),
	quantity INT,
	employ_id INT,
	PRIMARY KEY ( rma_id, shoe_id, size ),
	FOREIGN KEY (rma_id) REFERENCES rma_sell_date(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: mix_back_date
-- Purpose: Describe attributes of a mix, include date.
create table mix_back_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: mix_sell_date
-- Purpose: Describe attributes of a mix, include date.
create table mix_sell_date(
	id INT NOT NULL AUTO_INCREMENT,
	date DATE,
	brand_id INT,
	PRIMARY KEY ( id ),
	FOREIGN KEY (brand_id) REFERENCES brand(id)
);

-- Name: mix_back
-- Purpose: Describe attributes of a mix back to warehouse, include shoe, size, quantity. And which employee records.
create table mix_back(
	mix_id INT,
   	shoe_id INT,
	size FLOAT(3,1),
	quantity INT,
	employ_id INT,
	PRIMARY KEY (mix_id, shoe_id, size ),
	FOREIGN KEY (mix_id) REFERENCES mix_back_date(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: mix_sell
-- Purpose: Describe attributes of a mix sold, include shoe, size, quantity. And which employee records.
create table mix_sell(
	mix_id INT,
    	shoe_id INT,
	size FLOAT(3,1),
	quantity INT,
	employ_id INT,
	PRIMARY KEY ( mix_id, shoe_id, size ),
	FOREIGN KEY (mix_id) REFERENCES mix_sell_date(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (employ_id) REFERENCES employ(id)
);

-- Name: section
-- Purpose: Describe attributes of a warehouse section. Includes which flour and which section.
create table section(
	id INT NOT NULL AUTO_INCREMENT,
	floor INT,
	section VARCHAR(5),
	PRIMARY KEY ( id )
);

-- Name: shoe_section
-- Purpose: Describe attributes of a warehouse storage. Includes which section stores the quantity of shoe box.
create table shoe_section(
	sec_id INT,
	box_id INT,
    shoe_id INT,
	quantity INT,
	PRIMARY KEY ( sec_id, box_id, shoe_id ),
	FOREIGN KEY (sec_id) REFERENCES section(id),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id),
	FOREIGN KEY (box_id) REFERENCES box(id)
);

-- Name: photo
-- Purpose: Describe attributes of a shoe photo. Include which shoe , photo and image name.
create table photo(
	shoe_id INT,
    image_id INT,
	imageName varChar(50), 
    varBinaryData BLOB,
	PRIMARY KEY ( shoe_id, image_id ),
	FOREIGN KEY (shoe_id) REFERENCES shoe(id)
);




